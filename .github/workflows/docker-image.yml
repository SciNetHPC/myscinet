name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: extract_tag
        run: echo "tag=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.extract_tag.outputs.tag }}

      - name: Prune old images (keep last 8)
        uses: actions/github-script@v7
        with:
          script: |
            const repo = process.env.GITHUB_REPOSITORY;
            const [owner, name] = repo.split('/');
            const images = await github.rest.packages.getAllPackageVersionsForPackageOwnedByUser({
              package_type: 'container',
              package_name: name,
              username: owner,
              per_page: 100
            });
            const versions = images.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            const toDelete = versions.slice(8);
            for (const v of toDelete) {
              await github.rest.packages.deletePackageVersionForUser({
                package_type: 'container',
                package_name: name,
                username: owner,
                package_version_id: v.id
              });
              console.log(`Deleted image version ${v.id}`);
